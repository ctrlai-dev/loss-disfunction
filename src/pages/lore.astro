---
import Base from "@/layouts/Base.astro";
import { getCollection } from "astro:content";
import BackgroundMist from "@/components/BackgroundMist.astro";
const logs = (await getCollection("logs")).sort((a,b)=>a.data.index-b.data.index);
const renderedLogs = await Promise.all(logs.map(async (entry) => ({
  ...entry,
  Content: (await entry.render()).Content
})));
---
<Base title="System Logs — LOSS DISFUNCTION">
  <section class="relative overflow-hidden min-h-screen">
    <BackgroundMist />
    <div class="container py-12 max-w-4xl relative z-10">
    <div class="mb-12">
      <h1 class="text-4xl font-bold text-cyan mb-4">System Logs</h1>
      <p class="text-muted text-lg">Fragments of the Seed's evolution — ordered 000 → 007.</p>
    </div>
    
    <div class="space-y-12">
      {renderedLogs.map((entry) => (
        <section id={`log-${String(entry.data.index).padStart(3,"0")}`} class="card p-8">
          <div class="mb-6">
            <h2 class="text-2xl font-bold text-cyan mb-2 tracking-wide">
              [{String(entry.data.index).padStart(3,"0")}] {entry.data.title}
            </h2>
            {entry.data.scene && (
              <p class="text-violet text-sm font-mono">Scene: {entry.data.scene}</p>
            )}
            {entry.data.characters && (
              <p class="text-muted text-sm font-mono">Characters: {entry.data.characters.join(", ")}</p>
            )}
          </div>
          <div class="prose prose-invert max-w-none">
            <entry.Content />
          </div>
        </section>
      ))}
    </div>
    </div>
  </section>
</Base>
