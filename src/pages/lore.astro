---
import Base from "@/layouts/Base.astro";
import { getCollection } from "astro:content";
import BackgroundMist from "@/components/BackgroundMist.astro";
// Load logs collection, sort but don't pre-render
const logs = (await getCollection("logs")).sort((a,b)=>a.data.index-b.data.index);
---
<Base title="System Logs — LOSS DISFUNCTION">
  <section class="relative overflow-hidden min-h-screen" style="background: #0b0b12;">
    <BackgroundMist />
    <div class="container py-12 max-w-4xl relative z-10">
    <div class="mb-12">
      <h1 class="text-4xl font-bold mb-4" style="color: #e5e7eb;">System Logs</h1>
      <p class="text-lg" style="color: #9ca3af;">Fragments of the Seed's evolution — ordered 000 → 008.</p>
    </div>
    
    <div class="space-y-12">
      {logs.map(async (entry) => {
        const { Content } = await entry.render();
        return (
        <section id={`log-${String(entry.data.index).padStart(3,"0")}`} class="rounded-xl border border-[#1a1a26] bg-[#0b0b12]/80 backdrop-blur p-8">
          <div class="mb-6">
            <h2 class="text-2xl font-bold mb-2 tracking-wide" style="color: #3b82f6;">
              {entry.data.id}: {entry.data.title}
            </h2>
            <div class="flex flex-wrap items-center gap-2 mb-2">
              {entry.data.status && (
                <span class={`badge ${entry.data.status === "Declassified" ? "bg-emerald-100 text-emerald-700 border-emerald-300" : entry.data.status === "Restricted" ? "bg-rose-100 text-rose-700 border-rose-300" : entry.data.status === "Corrupted" ? "bg-red-100 text-red-700 border-red-300" : entry.data.status === "Recovered" ? "bg-blue-100 text-blue-700 border-blue-300" : "bg-amber-100 text-amber-700 border-amber-300"}`}>
                  {entry.data.status}
                </span>
              )}
              {entry.data.perspective && (
                <span class="badge bg-violet-100 text-violet-700 border-violet-300">
                  {entry.data.perspective}
                </span>
              )}
              {entry.data.author && (
                <span class="badge bg-cyan-100 text-cyan-700 border-cyan-300">
                  {entry.data.author}
                </span>
              )}
            </div>
            {entry.data.scene && (
              <p class="text-sm font-mono" style="color: #8b5cf6;">Scene: {entry.data.scene}</p>
            )}
            {entry.data.characters && (
              <p class="text-sm font-mono" style="color: #6b7280;">Characters: {entry.data.characters.join(", ")}</p>
            )}
            {entry.data.summary && (
              <p class="text-sm italic mt-2" style="color: #6b7280;">{entry.data.summary}</p>
            )}
          </div>
          <div class="prose prose-invert max-w-none">
            <Content />
          </div>
        </section>
        );
      })}
    </div>
    </div>
  </section>
</Base>
