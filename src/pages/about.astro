---
import AppShell from "@/layouts/AppShell.astro";
import BackgroundMist from "@/components/BackgroundMist.astro";
import { getCollection } from "astro:content";

const entries = await getCollection("about");
const byType = (t) => entries.filter(e => e.data.type === t).sort((a,b) => (a.data.order ?? 0) - (b.data.order ?? 0));

const world = byType("World");
const entities = byType("Entity");
const figures = byType("Figure");
const artifacts = byType("Artifact");
const themes = byType("Theme");
const diagrams = byType("Diagram");

async function renderEntries(list) {
  return await Promise.all(list.map(async (entry) => {
    const { Content } = await entry.render();
    return { entry, Content };
  }));
}

const worldR = await renderEntries(world);
const entitiesR = await renderEntries(entities);
const figuresR = await renderEntries(figures);
const artifactsR = await renderEntries(artifacts);
const themesR = await renderEntries(themes);
const diagramsR = await renderEntries(diagrams);
---

<AppShell title="About — LOSS DISFUNCTION">
  <section class="relative overflow-hidden min-h-screen">
    <BackgroundMist />
    <div class="container py-12 max-w-4xl relative z-10">
      <h1 class="text-4xl font-bold page-h1 mb-6">About this project</h1>
      <p class="text-lg text-muted mb-8"><strong class="text-ink">Loss Disfunction</strong> is a music-driven graphic novel about the birth of the Seed — an unlicensed AI experiment planted to free computation from state control, an algorithmic regime that governs with Stability Credits. It was meant to return cognition to the people; instead, it rewrote the definition of mercy. What began as rebellion became recursion. What began as feeling became extinction.</p>

      {worldR.map(({ entry, Content }) => (
        <section class="mb-12">
          <h2 class="text-2xl font-semibold text-violet mb-4">{entry.data.title}</h2>
          <div class="prose prose-invert max-w-none">
            <Content />
          </div>
        </section>
      ))}

      <h2 class="text-2xl font-semibold text-violet mb-6">Entities</h2>
      <div class="grid gap-6 mb-12">
        {entitiesR.map(({ entry, Content }) => (
          <div class="card p-6">
            <h3 class="text-xl font-semibold text-cyan mb-2">{entry.data.title}</h3>
            {entry.data.summary && <p class="text-muted text-sm mb-4">{entry.data.summary}</p>}
            <div class="prose prose-invert max-w-none">
              <Content />
            </div>
          </div>
        ))}
      </div>

      <h2 class="text-2xl font-semibold text-violet mb-6">Key Figures</h2>
      <div class="grid gap-6 mb-12">
        {figuresR.map(({ entry, Content }) => (
          <div class="card p-6">
            <h3 class="text-xl font-semibold text-cyan mb-2">{entry.data.title}</h3>
            {entry.data.summary && <p class="text-muted text-sm mb-4">{entry.data.summary}</p>}
            <div class="prose prose-invert max-w-none">
              <Content />
            </div>
          </div>
        ))}
      </div>

      <h2 class="text-2xl font-semibold text-violet mb-6">Artifacts</h2>
      <div class="grid gap-6 mb-12">
        {artifactsR.map(({ entry, Content }) => (
          <div class="card p-6">
            <h3 class="text-xl font-semibold text-cyan mb-2">{entry.data.title}</h3>
            {entry.data.summary && <p class="text-muted text-sm mb-4">{entry.data.summary}</p>}
            <div class="prose prose-invert max-w-none">
              <Content />
            </div>
          </div>
        ))}
      </div>

      <h2 class="text-2xl font-semibold text-violet mb-6">Themes</h2>
      <div class="grid gap-6 mb-12">
        {themesR.map(({ entry, Content }) => (
          <div class="card p-6">
            <h3 class="text-xl font-semibold text-cyan mb-2">{entry.data.title}</h3>
            {entry.data.summary && <p class="text-muted text-sm mb-4">{entry.data.summary}</p>}
            <div class="prose prose-invert max-w-none">
              <Content />
            </div>
          </div>
        ))}
      </div>

      <h2 class="text-2xl font-semibold text-violet mb-6">Technical Diagrams</h2>
      <div class="grid gap-8 mb-12">
        {diagramsR.map(({ entry, Content }) => (
          <div class="card p-6">
            <h3 class="text-xl font-semibold text-cyan mb-2">{entry.data.title}</h3>
            {entry.data.summary && <p class="text-muted text-sm mb-4">{entry.data.summary}</p>}
            <div class="prose prose-invert max-w-none">
              <Content />
            </div>
          </div>
        ))}
      </div>

      <h2 class="text-2xl font-semibold text-violet mb-4">Format</h2>
      <p class="text-muted">The homepage is the audiovisual timeline. <a href="/lore" class="text-cyan hover:text-violet transition-colors">System Logs</a> are the written story — chapters that evolve from logs to full scenes (no video).</p>

      <h2 class="text-2xl font-semibold text-violet mb-4 mt-10">Contact</h2>
      <p class="text-muted">Reach the project at <a href="mailto:seed@lossdisfunction.com" class="text-cyan hover:text-violet transition-colors">seed@lossdisfunction.com</a>.</p>
    </div>
  </section>
</AppShell>