---
import '../styles/globals.css';
const { title = 'LOSS DISFUNCTION', description = 'Music • Story • Universe', pageClass = '' } = Astro.props;
---
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{title}</title>
    <meta name="description" content={description} />
    <link rel="icon" href="/favicon.svg" />
    <link rel="preconnect" href="https://img.youtube.com" />
    <link rel="dns-prefetch" href="https://music.youtube.com" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content="website" />
  </head>
  <body class={`min-h-screen ${pageClass}`}>
    <header class="sticky top-0 z-50 backdrop-blur bg-[#050507cc] border-b border-[#191927]">
      <div class="container flex items-center justify-between py-3">
        <a href="/" class="flex items-center">
          <img src="/ld_logo.png" alt="LOSS DISFUNCTION" class="h-10" />
        </a>
        
        <!-- Mobile menu button -->
        <button id="mobile-menu-button" class="md:hidden flex flex-col items-center justify-center w-8 h-8 space-y-1">
          <span class="block w-6 h-0.5 bg-ink transition-all duration-300"></span>
          <span class="block w-6 h-0.5 bg-ink transition-all duration-300"></span>
          <span class="block w-6 h-0.5 bg-ink transition-all duration-300"></span>
        </button>
        
        <!-- Desktop navigation -->
        <nav class="hidden md:flex gap-4 text-sm">
          <a class="nav-link" href="/lattice">The Lattice</a>
          <a class="nav-link" href="/about">Manifest</a>
          <a class="nav-link" href="/lore">System Logs</a>
          <a class="nav-link" href="/archives">Archives</a>
          <a class="nav-link" href="/lexicon">Lexicon</a>
          <a class="nav-link" href="https://music.youtube.com/playlist?list=OLAK5uy_ngacUtBjeB86BXLOXpADUSHjf2_5cpl5o" target="_blank">Vox Requiem</a>
        </nav>
      </div>
      
      <!-- Mobile navigation menu -->
      <div id="mobile-menu" class="md:hidden hidden bg-[#050507cc] border-t border-[#191927]">
        <nav class="container py-4 flex flex-col gap-4 text-sm">
          <a class="nav-link" href="/lattice">The Lattice</a>
          <a class="nav-link" href="/about">Manifest</a>
          <a class="nav-link" href="/lore">System Logs</a>
          <a class="nav-link" href="/archives">Archives</a>
          <a class="nav-link" href="/lexicon">Lexicon</a>
          <a class="nav-link" href="https://music.youtube.com/playlist?list=OLAK5uy_ngacUtBjeB86BXLOXpADUSHjf2_5cpl5o" target="_blank">Vox Requiem</a>
        </nav>
      </div>
    </header>
    <main>
      <slot />
    </main>
    <footer class="border-t border-[#191927] mt-16">
      <div class="container text-sm text-muted py-6 flex justify-between items-center">
        <div>© {new Date().getFullYear()} LOSS DISFUNCTION</div>
        <a href="mailto:seed@lossdisfunction.com?subject=Message from Loss Disfunction" class="text-cyan hover:text-violet transition-colors">Ping</a>
      </div>
    </footer>
    
    <script>
      // Mobile menu toggle - optimized for performance
      (function() {
        'use strict';
        let mobileMenuButton, mobileMenu;
        
        function init() {
          mobileMenuButton = document.getElementById('mobile-menu-button');
          mobileMenu = document.getElementById('mobile-menu');
          
          if (mobileMenuButton && mobileMenu) {
            mobileMenuButton.addEventListener('click', toggleMenu, { passive: true });
          }
        }
        
        function toggleMenu() {
          const isHidden = mobileMenu.classList.contains('hidden');
          mobileMenu.classList.toggle('hidden');
          
          // Animate hamburger lines
          const spans = mobileMenuButton.querySelectorAll('span');
          if (isHidden) {
            // Transform to X
            spans[0].style.transform = 'rotate(45deg) translate(5px, 5px)';
            spans[1].style.opacity = '0';
            spans[2].style.transform = 'rotate(-45deg) translate(7px, -6px)';
          } else {
            // Reset to hamburger
            spans[0].style.transform = 'none';
            spans[1].style.opacity = '1';
            spans[2].style.transform = 'none';
          }
        }
        
        // Use requestIdleCallback if available, otherwise setTimeout
        if (window.requestIdleCallback) {
          requestIdleCallback(init);
        } else {
          setTimeout(init, 1);
        }
      })();
    </script>
  </body>
</html>
